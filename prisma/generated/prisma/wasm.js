
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('./runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.16.1
 * Query Engine version: 1c57fdcd7e44b29b9313256c76699e91c3ac3c43
 */
Prisma.prismaVersion = {
  client: "6.16.1",
  engine: "1c57fdcd7e44b29b9313256c76699e91c3ac3c43"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.PedidoScalarFieldEnum = {
  id: 'id',
  pessoaId: 'pessoaId',
  descricao: 'descricao'
};

exports.Prisma.PedidosProdutosScalarFieldEnum = {
  id: 'id',
  pedidoId: 'pedidoId',
  produtoId: 'produtoId'
};

exports.Prisma.PessoaScalarFieldEnum = {
  id: 'id',
  nome: 'nome'
};

exports.Prisma.ProdutoScalarFieldEnum = {
  id: 'id',
  nome: 'nome',
  preco: 'preco'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};


exports.Prisma.ModelName = {
  Pedido: 'Pedido',
  PedidosProdutos: 'PedidosProdutos',
  Pessoa: 'Pessoa',
  Produto: 'Produto'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "/home/windel/Documentos/Codigos/comando-dos-guri/prisma/generated/prisma",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "debian-openssl-3.0.x",
        "native": true
      }
    ],
    "previewFeatures": [
      "prismaSchemaFolder"
    ],
    "sourceFilePath": "/home/windel/Documentos/Codigos/comando-dos-guri/prisma/schema/schema.prisma",
    "isCustomOutput": true
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../../../.env"
  },
  "relativePath": "../../schema",
  "clientVersion": "6.16.1",
  "engineVersion": "1c57fdcd7e44b29b9313256c76699e91c3ac3c43",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "postgresql",
  "postinstall": false,
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "model Pedido {\n  id        Int               @id @default(autoincrement())\n  pessoaId  Int\n  descricao String\n  pessoa    Pessoa            @relation(fields: [pessoaId], references: [id])\n  produtos  PedidosProdutos[]\n}\n\nmodel PedidosProdutos {\n  id        Int      @id @default(autoincrement())\n  pedidoId  Int\n  produtoId Int\n  pedido    Pedido   @relation(fields: [pedidoId], references: [id])\n  produto   Produto  @relation(fields: [produtoId], references: [id])\n  Pessoa    Pessoa[]\n\n  @@unique([pedidoId, produtoId])\n}\n\nmodel Pessoa {\n  id              Int               @id @default(autoincrement())\n  nome            String\n  pedidos         Pedido[]\n  pedidosProdutos PedidosProdutos[]\n}\n\nmodel Produto {\n  id      Int               @id @default(autoincrement())\n  nome    String\n  preco   Float\n  pedidos PedidosProdutos[]\n}\n\ngenerator client {\n  provider        = \"prisma-client-js\"\n  output          = \"../generated/prisma\"\n  previewFeatures = [\"prismaSchemaFolder\"]\n}\n\ndatasource db {\n  provider = \"postgresql\"\n  url      = env(\"DATABASE_URL\")\n}\n",
  "inlineSchemaHash": "d861d3c0bcfd84544ae025a4054aa40748ff63ab80d6018ace6b8977014f8837",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"Pedido\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"pessoaId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"descricao\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"pessoa\",\"kind\":\"object\",\"type\":\"Pessoa\",\"relationName\":\"PedidoToPessoa\"},{\"name\":\"produtos\",\"kind\":\"object\",\"type\":\"PedidosProdutos\",\"relationName\":\"PedidoToPedidosProdutos\"}],\"dbName\":null},\"PedidosProdutos\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"pedidoId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"produtoId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"pedido\",\"kind\":\"object\",\"type\":\"Pedido\",\"relationName\":\"PedidoToPedidosProdutos\"},{\"name\":\"produto\",\"kind\":\"object\",\"type\":\"Produto\",\"relationName\":\"PedidosProdutosToProduto\"},{\"name\":\"Pessoa\",\"kind\":\"object\",\"type\":\"Pessoa\",\"relationName\":\"PedidosProdutosToPessoa\"}],\"dbName\":null},\"Pessoa\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"nome\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"pedidos\",\"kind\":\"object\",\"type\":\"Pedido\",\"relationName\":\"PedidoToPessoa\"},{\"name\":\"pedidosProdutos\",\"kind\":\"object\",\"type\":\"PedidosProdutos\",\"relationName\":\"PedidosProdutosToPessoa\"}],\"dbName\":null},\"Produto\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"nome\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"preco\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"pedidos\",\"kind\":\"object\",\"type\":\"PedidosProdutos\",\"relationName\":\"PedidosProdutosToProduto\"}],\"dbName\":null}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

